/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fomerca.view;

import dto.Constante;
import facade.UserSessionBean;
import facade.local.UserSessionBeanLocal;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Adonis
 */
public class VentanaConfiguracionConstantes extends javax.swing.JFrame {

    UserSessionBeanLocal userSessionBeanLocal = new UserSessionBean();
    private Constante constante;
    private List<Constante> constantes;

    /**
     * Creates new form VentanaConfiguracionConstantes
     */
    public VentanaConfiguracionConstantes() {
        initComponents();
        this.setTitle("Factor Corrector");

        JLabel label = new JLabel();
        label.setIcon(new ImageIcon(getClass().getResource("/resource/fondo_constante.jpg")));
        label.setAlignmentX(this.getAlignmentX());
        label.setAlignmentY(this.getAlignmentY());
        label.setSize(this.getSize());
        this.add(label);

//        PanelVentanaConfiguracionConstantes panelVentanaConfiguracionConstantes
//                = new PanelVentanaConfiguracionConstantes();
//        this.add(panelVentanaConfiguracionConstantes, BorderLayout.CENTER);
//        this.pack();
//        Graphics fondoPanel = jPanel1.getGraphics();
//        fondoPanel.drawImage(new ImageIcon(getClass().getResource("/resource/fondo_constante.jpg")).getImage(),
//                getSize().width, getSize().height, null);
//
//        jPanel1.paintComponents(fondoPanel);
        setLocationRelativeTo(null);
        listFieldConstante.setForeground(null);
        constantes = new ArrayList<Constante>(userSessionBeanLocal.getConstantes());
        String[] constanteToArray = new String[constantes.size()];
        for (int i = 0; i < constantes.size(); i++) {
            constanteToArray[i] = constantes.get(i).getValue();
        }
        listFieldConstante.setListData(constanteToArray);

        listFieldConstante.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                constante = constantes.get(listFieldConstante.getSelectedIndex());
                textFieldKey.setText(constante.getKey());
                textFieldValue.setText(constante.getValue());
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        textFieldKey = new javax.swing.JTextField();
        textFieldValue = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        buttonAgregar = new javax.swing.JButton();
        buttonEliminar = new javax.swing.JButton();
        buttonVolver = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listFieldConstante = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Configuraci√≥n Constantes");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Key:");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Value:");

        buttonAgregar.setBackground(new java.awt.Color(102, 0, 0));
        buttonAgregar.setForeground(new java.awt.Color(255, 255, 255));
        buttonAgregar.setText("Agregar");
        buttonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAgregarActionPerformed(evt);
            }
        });

        buttonEliminar.setBackground(new java.awt.Color(102, 0, 0));
        buttonEliminar.setForeground(new java.awt.Color(255, 255, 255));
        buttonEliminar.setText("Eliminar");
        buttonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEliminarActionPerformed(evt);
            }
        });

        buttonVolver.setBackground(new java.awt.Color(102, 0, 0));
        buttonVolver.setForeground(new java.awt.Color(255, 255, 255));
        buttonVolver.setText("Volver");
        buttonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonVolverActionPerformed(evt);
            }
        });

        listFieldConstante.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listFieldConstante);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(textFieldValue))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18)
                                    .addComponent(textFieldKey, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(buttonAgregar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonEliminar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonVolver, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textFieldKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(textFieldValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonAgregar)
                    .addComponent(buttonEliminar)
                    .addComponent(buttonVolver))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEliminarActionPerformed
        if (constante != null) {
            if (JOptionPane.showConfirmDialog(null, "Esta seguro que desea ELIMINAR esta constante?."
                    + "\nKey: " + constante.getKey()
                    + "\nValue: " + constante.getValue()) == 0) {
                constante.setActivo(Boolean.FALSE);
                userSessionBeanLocal.saveConstante(constante);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un elemento.");
        }
    }//GEN-LAST:event_buttonEliminarActionPerformed

    private void buttonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAgregarActionPerformed
        if (constante != null) {
            if (!textFieldKey.getText().equals("") && !textFieldValue.getText().equals("")) {
                if (JOptionPane.showConfirmDialog(null, "Esta seguro que desea EDITAR este elemento?"
                        + "\nKey: " + textFieldKey.getText()
                        + "\nValue: " + textFieldValue.getText()) == 0) {
                    constante.setValue(textFieldValue.getText());
                    constante.setKey(textFieldKey.getText());
                    userSessionBeanLocal.saveConstante(constante);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Los campos no deben estar vac√≠os.");
            }
        } else {
            if (!textFieldKey.getText().equals("") && !textFieldValue.getText().equals("")) {
                if (JOptionPane.showConfirmDialog(null, "Esta seguro que desea guardar este NUEVO elemento?"
                        + "\nKey: " + textFieldKey.getText()
                        + "\nValue: " + textFieldValue.getText()) == 0) {
                    userSessionBeanLocal.saveConstante(
                            new Constante(textFieldKey.getText(),
                                    textFieldValue.getText(), Boolean.TRUE));
                }
            } else {
                JOptionPane.showMessageDialog(null, "Los campos no deben estar vac√≠os.");
            }
        }
        recargar();
    }//GEN-LAST:event_buttonAgregarActionPerformed

    private void buttonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonVolverActionPerformed
        VentanaMenu ventanaMenu = new VentanaMenu();
        ventanaMenu.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_buttonVolverActionPerformed
    private void recargar() {
        new VentanaConfiguracionConstantes().setVisible(true);
        this.setVisible(false);
        try {
            finalize();
        } catch (Throwable ex) {
            Logger.getLogger(VentanaConfiguracionConstantes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaConfiguracionConstantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaConfiguracionConstantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaConfiguracionConstantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaConfiguracionConstantes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaConfiguracionConstantes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAgregar;
    private javax.swing.JButton buttonEliminar;
    private javax.swing.JButton buttonVolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listFieldConstante;
    private javax.swing.JTextField textFieldKey;
    private javax.swing.JTextField textFieldValue;
    // End of variables declaration//GEN-END:variables
}
